@model AppointmentViewModel

@section Styles {
    <link rel="stylesheet" href="~/css/pages/reschedule.css" />
}

@{
    ViewData["Title"] = "Reschedule Appointment";
    Layout = "_Layout";

    int month = Context.Request.Query["month"].Count > 0 ? int.Parse(Context.Request.Query["month"]) : DateTime.Now.Month;
    int year = Context.Request.Query["year"].Count > 0 ? int.Parse(Context.Request.Query["year"]) : DateTime.Now.Year;
    DateTime currentDate = new DateTime(year, month, 1);
}

<div class="container appointment-container">
    <div class="appointment-form">
        <h2>Reschedule Appointment</h2>
        <p>Select a new date, time, and volunteer to reschedule your appointment.</p>

        <form asp-action="Reschedule" method="post">
            <input type="hidden" asp-for="AppointmentId" />
            <div class="validation-summary-errors" asp-validation-summary="All" style="display:none;"></div>

            <div class="calendar-container">
                <div class="calendar-header">
                    <div class="calendar-title">@currentDate.ToString("MMMM yyyy")</div>
                    <div class="calendar-nav">
                        @{
                            var prev = currentDate.AddMonths(-1);
                            var next = currentDate.AddMonths(1);
                        }
                        <a class="calendar-nav-btn" asp-controller="Appointment" asp-action="Reschedule"
                           asp-route-month="@prev.Month" asp-route-year="@prev.Year" asp-route-id="@Model.AppointmentId" title="Previous Month">
                            <i class="bi bi-chevron-left"></i>
                        </a>
                        <a class="calendar-nav-btn" asp-controller="Appointment" asp-action="Reschedule"
                           asp-route-month="@next.Month" asp-route-year="@next.Year" asp-route-id="@Model.AppointmentId" title="Next Month">
                            <i class="bi bi-chevron-right"></i>
                        </a>
                    </div>
                </div>

                <div class="calendar-grid">
                    <div class="calendar-day-header">Sun</div>
                    <div class="calendar-day-header">Mon</div>
                    <div class="calendar-day-header">Tue</div>
                    <div class="calendar-day-header">Wed</div>
                    <div class="calendar-day-header">Thu</div>
                    <div class="calendar-day-header">Fri</div>
                    <div class="calendar-day-header">Sat</div>

                    @{
                        var firstOfMonth = new DateTime(year, month, 1);
                        var daysInMonth = DateTime.DaysInMonth(year, month);
                        int startDayOfWeek = (int)firstOfMonth.DayOfWeek;

                        var prevMonthDate = firstOfMonth.AddMonths(-1);
                        int daysInPrevMonth = DateTime.DaysInMonth(prevMonthDate.Year, prevMonthDate.Month);
                        int totalSlots = 42;

                        for (int i = 0; i < totalSlots; i++)
                        {
                            DateTime cellDate;
                            string cssClass = "calendar-day";

                            if (i < startDayOfWeek)
                            {
                                int day = daysInPrevMonth - startDayOfWeek + i + 1;
                                cellDate = new DateTime(prevMonthDate.Year, prevMonthDate.Month, day);
                                cssClass += " other-month";
                            }
                            else if (i >= startDayOfWeek + daysInMonth)
                            {
                                int day = i - (startDayOfWeek + daysInMonth) + 1;
                                var nextMonthDate = firstOfMonth.AddMonths(1);
                                cellDate = new DateTime(nextMonthDate.Year, nextMonthDate.Month, day);
                                cssClass += " other-month";
                            }
                            else
                            {
                                int day = i - startDayOfWeek + 1;
                                cellDate = new DateTime(year, month, day);
                            }

                            <div class="@cssClass">
                                <div class="calendar-day-number" data-day="@cellDate.ToString("yyyy-MM-dd")">
                                    @cellDate.Day
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

            <div class="form-group mt-3">
                <label class="form-label">Selected Date</label>
                <input type="date" id="selected-date" name="AppointmentDate" class="form-control" readonly required>
            </div>

            <div class="form-group mt-3">
                <label class="form-label">Available Time Slots</label>
                <div class="time-slots">
                    <div class="time-slot" data-time="09:00">9:00 AM</div>
                    <div class="time-slot" data-time="10:00">10:00 AM</div>
                    <div class="time-slot" data-time="11:00">11:00 AM</div>
                    <div class="time-slot" data-time="12:00">12:00 PM</div>
                    <div class="time-slot" data-time="13:00">1:00 PM</div>
                    <div class="time-slot" data-time="14:00">2:00 PM</div>
                    <div class="time-slot" data-time="15:00">3:00 PM</div>
                    <div class="time-slot" data-time="16:00">4:00 PM</div>
                    <div class="time-slot unavailable" data-time="17:00">5:00 PM</div>
                </div>
                <input type="hidden" id="selected-time" name="AppointmentTime" required />
            </div>

            <div class="form-group mt-3">
                <label asp-for="Purpose" class="form-label">Purpose</label>
                <textarea asp-for="Purpose" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Purpose" class="text-danger small"></span>
            </div>

            <div class="form-group mt-3">
                <label asp-for="VolunteerId" class="form-label">Select Volunteer</label>
                <select asp-for="VolunteerId" class="form-select">
                    <option value="1" data-volunteer-id="a6cef287-368e-4590-97d7-4ecd8ded38c0">John Doe</option>
                    <option value="2">Sarah Johnson</option>
                    <option value="3">Michael Brown</option>
                </select>
                <span asp-validation-for="VolunteerId" class="text-danger small"></span>
            </div>

            <div class="d-flex justify-content-end mt-4">
                <button type="submit" class="btn btn-outline-primary px-4">
                    <i class="bi bi-calendar-check"></i> Confirm Reschedule
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const dateInput = document.getElementById("selected-date");
            const timeInput = document.getElementById("selected-time");

            document.querySelectorAll(".calendar-day-number").forEach(el => {
                el.addEventListener("click", function () {
                    const selected = document.querySelector(".calendar-day-number.selected");
                    if (selected) selected.classList.remove("selected");
                    this.classList.add("selected");
                    const selectedDate = this.getAttribute("data-day");
                    dateInput.value = selectedDate;
                });
            });

            document.querySelectorAll(".time-slot").forEach(slot => {
                slot.addEventListener("click", function () {
                    if (this.classList.contains("unavailable")) return;
                    document.querySelectorAll(".time-slot").forEach(s => s.classList.remove("selected"));
                    this.classList.add("selected");
                    timeInput.value = this.getAttribute("data-time");
                });
            });
        });
    </script>
}
