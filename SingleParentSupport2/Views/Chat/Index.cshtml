@{
    ViewData["Title"] = "Chat Support";
    Layout = "_Layout";
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/chat.css" />
}

<div class="page-header">
    <div class="container">
        <h1>Online Chat Support</h1>
        <p>Connect with our volunteers and counselors for real-time support</p>
    </div>
</div>

<div class="container">
    <div class="chat-container">
        <div class="chat-sidebar">
            <div class="sidebar-header">
                <h2>Conversations</h2>
            </div>
            <div class="search-box">
                <input type="text" class="search-input" placeholder="Search conversations...">
            </div>
            <div class="chat-rooms">
                @if (Model != null && Model.ChatRooms != null && Model.ChatRooms.Any())
                {
                    @foreach (var room in Model.ChatRooms)
                    {
                        <div class="chat-room @(room.Id == Model.ActiveRoomId ? "active" : "")" data-room-id="@room.Id">
                            <div class="room-avatar">
                                <img src="@room.AvatarUrl" alt="@room.Name">
                            </div>
                            <div class="room-info">
                                <div class="room-name">@room.Name</div>
                                <div class="room-last-message">@room.LastMessage</div>
                            </div>
                            <div class="room-meta">
                                <div class="room-time">@room.LastMessageTime</div>
                                @if (room.UnreadCount > 0)
                                {
                                    <div class="unread-badge">@room.UnreadCount</div>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="chat-room active" data-room-id="general">
                        <div class="room-avatar">
                            <img src="https://via.placeholder.com/50" alt="General Support">
                        </div>
                        <div class="room-info">
                            <div class="room-name">General Support</div>
                            <div class="room-last-message">Welcome to our chat support!</div>
                        </div>
                        <div class="room-meta">
                            <div class="room-time">Now</div>
                        </div>
                    </div>
                    <div class="chat-room" data-room-id="legal">
                        <div class="room-avatar">
                            <img src="https://via.placeholder.com/50" alt="Legal Support">
                        </div>
                        <div class="room-info">
                            <div class="room-name">Legal Support</div>
                            <div class="room-last-message">Get help with legal questions</div>
                        </div>
                        <div class="room-meta">
                            <div class="room-time">Now</div>
                        </div>
                    </div>
                    <div class="chat-room" data-room-id="emotional">
                        <div class="room-avatar">
                            <img src="https://via.placeholder.com/50" alt="Emotional Support">
                        </div>
                        <div class="room-info">
                            <div class="room-name">Emotional Support</div>
                            <div class="room-last-message">Talk to our counselors</div>
                        </div>
                        <div class="room-meta">
                            <div class="room-time">Now</div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="chat-main">
            <div class="chat-header">
                <div class="chat-header-avatar">
                    <img src="https://via.placeholder.com/40" alt="General Support">
                </div>
                <div class="chat-header-info">
                    <div class="chat-header-name">General Support</div>
                    <div class="chat-header-status">Online</div>
                </div>
                <div class="chat-header-actions">
                    <div class="chat-header-button">
                        <i class="bi bi-telephone"></i>
                    </div>
                    <div class="chat-header-button">
                        <i class="bi bi-info-circle"></i>
                    </div>
                </div>
            </div>

            <div class="chat-messages" id="chat-messages">
                @if (Model != null && Model.Messages != null && Model.Messages.Any())
                {
                    @foreach (var message in Model.Messages)
                    {
                        <div class="message @(message.IsOutgoing ? "outgoing" : "incoming")">
                            <div class="message-avatar">
                                <img src="@message.AvatarUrl" alt="@message.SenderName">
                            </div>
                            <div class="message-content">
                                <div class="message-bubble">
                                    @message.Content
                                </div>
                                <div class="message-time">@message.Timestamp</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="message incoming">
                        <div class="message-avatar">
                            <img src="https://via.placeholder.com/40" alt="Support Agent">
                        </div>
                        <div class="message-content">
                            <div class="message-bubble">
                                Hello! Welcome to our chat support. How can we help you today?
                            </div>
                            <div class="message-time">Just now</div>
                        </div>
                    </div>
                }
            </div>

            <form class="chat-input" id="chat-form">
                <div class="input-actions">
                    <div class="input-action-button">
                        <i class="bi bi-emoji-smile"></i>
                    </div>
                    <div class="input-action-button">
                        <i class="bi bi-paperclip"></i>
                    </div>
                </div>
                <textarea class="message-input" id="message-input" placeholder="Type a message..." rows="1"></textarea>
                <button type="submit" class="send-button">
                    <i class="bi bi-send"></i>
                </button>
            </form>
        </div>
    </div>

    <div class="chat-info">
        <h2>About Our Chat Support</h2>
        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="chat-info-card">
                    <h3>How It Works</h3>
                    <p>Our chat support connects you with trained volunteers and professional counselors who can provide guidance, resources, and emotional support. All conversations are confidential and secure.</p>
                    <ul class="chat-info-list">
                        <li class="chat-info-item"><i class="bi bi-check-circle"></i> Available Monday-Friday, 9am-8pm</li>
                        <li class="chat-info-item"><i class="bi bi-check-circle"></i> Weekend support: Saturday 10am-4pm</li>
                        <li class="chat-info-item"><i class="bi bi-check-circle"></i> Crisis support available 24/7</li>
                    </ul>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="chat-info-card">
                    <h3>Chat Support Categories</h3>
                    <p>We offer specialized support in different areas to better address your specific needs:</p>
                    <ul class="chat-info-list">
                        <li class="chat-info-item"><i class="bi bi-chat-dots"></i> <strong>General Support:</strong> For general questions and guidance</li>
                        <li class="chat-info-item"><i class="bi bi-briefcase"></i> <strong>Legal Support:</strong> For questions about custody, visitation, and legal rights</li>
                        <li class="chat-info-item"><i class="bi bi-heart"></i> <strong>Emotional Support:</strong> For mental health and emotional wellbeing</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add Bootstrap Icons if not already included in layout
        if (!document.querySelector('link[href*="bootstrap-icons"]')) {
            const iconLink = document.createElement('link');
            iconLink.rel = 'stylesheet';
            iconLink.href = 'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css';
            document.head.appendChild(iconLink);
        }

        document.addEventListener('DOMContentLoaded', function() {
            const chatRooms = document.querySelectorAll('.chat-room');
            const chatHeader = document.querySelector('.chat-header');
            const chatHeaderAvatar = chatHeader.querySelector('.chat-header-avatar img');
            const chatHeaderName = chatHeader.querySelector('.chat-header-name');
            const messageInput = document.getElementById('message-input');
            const chatForm = document.getElementById('chat-form');
            const chatMessages = document.getElementById('chat-messages');

            // Chat room selection
            chatRooms.forEach(room => {
                room.addEventListener('click', function() {
                    // Remove active class from all rooms
                    chatRooms.forEach(r => r.classList.remove('active'));

                    // Add active class to clicked room
                    this.classList.add('active');

                    // Update chat header
                    const roomName = this.querySelector('.room-name').textContent;
                    const roomAvatar = this.querySelector('.room-avatar img').src;

                    chatHeaderName.textContent = roomName;
                    chatHeaderAvatar.src = roomAvatar;

                    // Here you would typically load messages for the selected room
                    // For demo purposes, we'll just clear the messages
                    chatMessages.innerHTML = '';

                    // Add a welcome message
                    const welcomeMessage = document.createElement('div');
                    welcomeMessage.className = 'message incoming';
                    welcomeMessage.innerHTML = `
                        <div class="message-avatar">
                            <img src="${roomAvatar}" alt="${roomName}">
                        </div>
                        <div class="message-content">
                            <div class="message-bubble">
                                Welcome to ${roomName}! How can we help you today?
                            </div>
                            <div class="message-time">Just now</div>
                        </div>
                    `;
                    chatMessages.appendChild(welcomeMessage);

                    // Scroll to bottom
                    chatMessages.scrollTop = chatMessages.scrollHeight;
                });
            });

            // Send message
            chatForm.addEventListener('submit', function(e) {
                e.preventDefault();

                const messageText = messageInput.value.trim();

                if (messageText) {
                    // Create outgoing message
                    const outgoingMessage = document.createElement('div');
                    outgoingMessage.className = 'message outgoing';
                    outgoingMessage.innerHTML = `
                        <div class="message-avatar">
                            <img src="https://via.placeholder.com/40" alt="You">
                        </div>
                        <div class="message-content">
                            <div class="message-bubble">
                                ${messageText}
                            </div>
                            <div class="message-time">Just now</div>
                        </div>
                    `;
                    chatMessages.appendChild(outgoingMessage);

                    // Clear input
                    messageInput.value = '';

                    // Scroll to bottom
                    chatMessages.scrollTop = chatMessages.scrollHeight;

                    // Simulate response after 1 second
                    setTimeout(() => {
                        const roomName = document.querySelector('.chat-room.active .room-name').textContent;
                        const roomAvatar = document.querySelector('.chat-room.active .room-avatar img').src;

                        const incomingMessage = document.createElement('div');
                        incomingMessage.className = 'message incoming';
                        incomingMessage.innerHTML = `
                            <div class="message-avatar">
                                <img src="${roomAvatar}" alt="${roomName}">
                            </div>
                            <div class="message-content">
                                <div class="message-bubble">
                                    Thank you for your message. A support agent will respond shortly.
                                </div>
                                <div class="message-time">Just now</div>
                            </div>
                        `;
                        chatMessages.appendChild(incomingMessage);

                        // Scroll to bottom
                        chatMessages.scrollTop = chatMessages.scrollHeight;
                    }, 1000);
                }
            });

            // Auto-resize textarea
            messageInput.addEventListener('input', function() {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });

            // Initial scroll to bottom
            chatMessages.scrollTop = chatMessages.scrollHeight;
        });
    </script>
}
